<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sidifensen.mapper.CommentMapper">

    <!-- 通用结果映射 -->
    <resultMap id="CommentVoMap" type="com.sidifensen.domain.vo.CommentVo">
        <id column="id" property="id"/>
        <result column="parent_id" property="parentId"/>
        <result column="article_id" property="articleId"/>
        <result column="user_id" property="userId"/>
        <result column="nickname" property="nickname"/>
        <result column="avatar" property="avatar"/>
        <result column="reply_user_id" property="replyUserId"/>
        <result column="reply_user_nickname" property="replyUserNickname"/>
        <result column="content" property="content"/>
        <result column="examine_status" property="examineStatus"/>
        <result column="like_count" property="likeCount"/>
        <result column="reply_count" property="replyCount"/>
        <result column="create_time" property="createTime"/>
        <result column="is_liked" property="isLiked"/>
    </resultMap>

    <!-- 查询文章的评论列表（包含用户信息） -->
    <select id="selectCommentListWithUserInfo" resultMap="CommentVoMap">
        SELECT
            c.id,
            c.parent_id,
            c.article_id,
            c.user_id,
            u.nickname,
            u.avatar,
            c.reply_user_id,
            ru.nickname AS reply_user_nickname,
            c.content,
            c.examine_status,
            COALESCE(like_stats.like_count, 0) AS like_count,
            c.reply_count,
            c.create_time,
            CASE 
                WHEN user_like.id IS NOT NULL THEN TRUE 
                ELSE FALSE 
            END AS is_liked
        FROM comment c
        LEFT JOIN sys_user u ON c.user_id = u.id
        LEFT JOIN sys_user ru ON c.reply_user_id = ru.id
        LEFT JOIN (
            SELECT type_id, COUNT(*) as like_count
            FROM `like`
            WHERE type = 1
            GROUP BY type_id
        ) like_stats ON like_stats.type_id = c.id
        LEFT JOIN `like` user_like ON user_like.type = 1 AND user_like.type_id = c.id AND user_like.user_id = #{currentUserId}
        WHERE c.article_id = #{articleId}
          AND c.parent_id = #{parentId}
          AND c.examine_status = 1
          AND c.is_deleted = 0
        ORDER BY c.create_time DESC
        LIMIT #{offset}, #{limit}
    </select>


</mapper>
